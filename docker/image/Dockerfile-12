FROM nvidia/cuda:10.0-base

ENV http_proxy http://192.41.170.23:3128
ENV https_proxy http://192.41.170.23:3128

RUN apt-get update && apt-get upgrade -y && apt-get install -y openssh-server
RUN mkdir /var/run/sshd
RUN mkdir /root/.ssh/
EXPOSE 22

# set the locale to en_US.UTF-8
RUN apt-get install -y locales
ENV DEBIAN_FRONTEND noninteractive
RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen \
    && locale-gen en_US.UTF-8 \
    && dpkg-reconfigure locales \
    && /usr/sbin/update-locale LANG=en_US.UTF-8
ENV LC_ALL en_US.UTF-8

RUN apt-get install -y python3-pip git
RUN pip3 install wheel
RUN pip3 install numpy torch==1.2.0 torchvision==0.4.0 tensorboard==1.14 future
RUN pip3 install tensorboard
RUN pip3 install cython==0.28.5
RUN pip3 install scipy==0.19.1
RUN pip3 install sklearn
RUN pip3 install pandas seaborn
RUN apt-get install -y pandoc
RUN pip3 install pandoc
RUN pip3 install pylint

# Requirements for Lab 04

RUN pip3 install --upgrade pip
RUN pip install matplotlib opencv-python
RUN apt install -y libgl1-mesa-glx

# Requirements for Lab 06

RUN apt-get install -y vim
RUN pip install scikit-image
RUN pip install pycocotools

# Requirements for Lab 08/09

RUN pip install dominate visdom

# Allow X forwarding to client

RUN apt-get update
RUN apt-get install -y python3-tk
RUN echo "X11UseLocalhost no" >> /etc/ssh/sshd_config

# For Lab 12

RUN pip install -U comet_ml torchaudio torchvision
RUN pip install torchtext

# If you use /root from the image, we need to set the proxy in .bashrc.
# If we mount /root from the host filesystem, this is not necessary.
# Instead, make sure the .bashrc in the directory that you mount as /root
# contains the correct proxy settings.

RUN echo "export https_proxy=http://192.41.170.23:3128" >> /root/.bashrc
RUN echo "export http_proxy=http://192.41.170.23:3128" >> /root/.bashrc

# If we mount /root from the host filesystem, this is NOT necessary.
# Instead, make sure the .ssh/authorized_keys file in the directory that
# you mount as /root contains the SSH public key you'll use to log in to the container.

COPY bazooka.pub /root/.ssh/authorized_keys

# CMD ["/usr/sbin/sshd", "-D"]
CMD chown -R root /root ; /usr/sbin/sshd -D